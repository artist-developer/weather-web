{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","data","coord","lon","lat","weather","id","main","description","icon","base","temp","feels_like","temp_min","temp_max","pressure","humidity","visibility","wind","speed","deg","clouds","all","dt","sys","type","country","sunrise","sunset","timezone","name","cod","loading","getWeather","a","console","log","axios","get","error","setState","this","style","flex","height","display","flexDirection","alignItems","justifyContent","backgroundColor","weatherOptions","color","title","subtitle","Component","Haze","iconName","Mist","Smoke","Fog","Ash","Dust","Thunderstorm","Drizzle","Rain","Snow","Clear","Clouds","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAIqBA,E,4MACnBC,MAAQ,CACNC,KAAM,CACJC,MAAO,CAAEC,IAAK,EAAGC,IAAK,GACtBC,QAAS,CAAC,CAAEC,GAAI,EAAGC,KAAM,GAAIC,YAAa,GAAIC,KAAM,KACpDC,KAAM,GACNH,KAAM,CACJI,KAAM,EACNC,WAAY,EACZC,SAAU,EACVC,SAAU,EACVC,SAAU,EACVC,SAAU,GAEZC,WAAY,EACZC,KAAM,CAAEC,MAAO,EAAGC,IAAK,GACvBC,OAAQ,CAAEC,IAAK,GACfC,GAAI,EACJC,IAAK,CACHC,KAAM,EACNnB,GAAI,EACJoB,QAAS,KACTC,QAAS,EACTC,OAAQ,GAEVC,SAAU,EACVvB,GAAI,EACJwB,KAAM,QACNC,IAAK,GAEPC,SAAS,G,EAMXC,W,sBAAa,gCAAAC,EAAA,6DACZC,QAAQC,IAAI,kBADA,SAGkBC,IAAMC,IAAI,gBAH5B,uBAGJrC,EAHI,EAGJA,MAAMsC,EAHF,EAGEA,QAGXJ,QAAQC,IAAIG,GAEdJ,QAAQC,IAAI,UAAYnC,GACxB,EAAKuC,SAAS,CAAER,SAAS,EAAO/B,KAAMA,IAT3B,kBAWJA,GAXI,4C,uDAHb,WACEwC,KAAKR,e,oBAeP,WACE,OACE,qBACES,MAAO,CACLC,KAAM,EACNC,OAAQ,QACRC,QAAS,OACTC,cAAc,MACdC,WAAW,SACXC,eAAe,SACfC,gBAAiBC,EAAeT,KAAKzC,MAAMC,KAAKI,QAAQ,GAAGE,MACvD2C,EAAeT,KAAKzC,MAAMC,KAAKI,QAAQ,GAAGE,MAAM4C,MAAM,GACtD,SAVR,SAaGV,KAAKzC,MAAMgC,QACV,sEAEA,gCACE,qDArEG,QAqEH,sCAEA,6BAAKkB,EAAeT,KAAKzC,MAAMC,KAAKI,QAAQ,GAAGE,MAAM6C,QACrD,6BAAKF,EAAeT,KAAKzC,MAAMC,KAAKI,QAAQ,GAAGE,MAAM8C,oB,GAvEhCC,aA+E3BJ,EAAiB,CACrBK,KAAM,CACJC,SAAU,cACVL,MAAO,CAAC,UAAW,WACnBC,MAAO,yCACPC,SAAU,oGAEZI,KAAM,CACJD,SAAU,cACVL,MAAO,CAAC,UAAW,WACnBC,MAAO,yCACPC,SAAU,oGAEZK,MAAO,CACLF,SAAU,cACVL,MAAO,CAAC,UAAW,WACnBC,MAAO,yCACPC,SAAU,oGAEZM,IAAK,CACHH,SAAU,cACVL,MAAO,CAAC,UAAW,WACnBC,MAAO,yCACPC,SAAU,oGAEZO,IAAK,CACHJ,SAAU,cACVL,MAAO,CAAC,UAAW,WACnBC,MAAO,yCACPC,SAAU,oGAEZQ,KAAM,CACJL,SAAU,cACVL,MAAO,CAAC,UAAW,WACnBC,MAAO,yCACPC,SAAU,iHAEZS,aAAc,CACZN,SAAU,oBACVL,MAAO,CAAC,UAAW,WACnBC,MAAO,oCACPC,SAAU,kGAEZU,QAAS,CACPP,SAAU,gBACVL,MAAO,CAAC,UAAW,UAAW,WAC9BC,MAAO,4DACPC,SACE,wKAEJW,KAAM,CACJR,SAAU,kBACVL,MAAO,CAAC,UAAW,UAAW,WAC9BC,MAAO,2CACPC,SAAU,yDAEZY,KAAM,CACJT,SAAU,gBACVL,MAAO,CAAC,UAAW,WACnBC,MAAO,mCACPC,SAAU,+GAEZa,MAAO,CACLV,SAAU,gBACVL,MAAO,CAAC,UAAW,WACnBC,MAAO,yCACPC,SAAU,8FAEZc,OAAQ,CACNX,SAAU,iBACVL,MAAO,CAAC,UAAW,WACnBC,MAAO,yCACPC,SAAU,iJC/ICe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7e2fbd9a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst region = \"Seoul\";\r\nexport default class App extends Component {\r\n  state = {\r\n    data: {\r\n      coord: { lon: 0, lat: 0 },\r\n      weather: [{ id: 0, main: \"\", description: \"\", icon: \"\" }],\r\n      base: \"\",\r\n      main: {\r\n        temp: 0,\r\n        feels_like: 0,\r\n        temp_min: 0,\r\n        temp_max: 0,\r\n        pressure: 0,\r\n        humidity: 0,\r\n      },\r\n      visibility: 0,\r\n      wind: { speed: 0, deg: 0 },\r\n      clouds: { all: 0 },\r\n      dt: 0,\r\n      sys: {\r\n        type: 1,\r\n        id: 0,\r\n        country: \"KR\",\r\n        sunrise: 0,\r\n        sunset: 0,\r\n      },\r\n      timezone: 0,\r\n      id: 0,\r\n      name: \"Seoul\",\r\n      cod: 0,\r\n    },\r\n    loading: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getWeather();\r\n  }\r\n  getWeather = async () => {\r\n   console.log(\"send to server\");\t  \r\n   //const { data, error } = await axios.get(\"localhost:8080/get-weather\");\r\n   const { data, error } = await axios.get(\"/get-weather\");\r\n\r\n    if (error) {\r\n      console.log(error);\r\n    }\r\n    console.log(\"data : \" + data);\r\n    this.setState({ loading: false, data: data });\r\n\r\n    return data;\r\n  };\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          flex: 1,\r\n          height: \"100vh\",\r\n          display: \"flex\",\r\n          flexDirection: `row`,\r\n          alignItems: `center`,\r\n          justifyContent: `center`,\r\n          backgroundColor: weatherOptions[this.state.data.weather[0].main]\r\n            ? weatherOptions[this.state.data.weather[0].main].color[0]\r\n            : \"white\",\r\n        }}\r\n      >\r\n        {this.state.loading ? (\r\n          <h1>로딩중입니다</h1>\r\n        ) : (\r\n          <div>\r\n            <h1>오늘의 {region} 날씨입니다.</h1>\r\n\r\n            <h2>{weatherOptions[this.state.data.weather[0].main].title}</h2>\r\n            <h2>{weatherOptions[this.state.data.weather[0].main].subtitle}</h2>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst weatherOptions = {\r\n  Haze: {\r\n    iconName: \"weather-fog\",\r\n    color: [\"#606c88\", \"#3f4c6b\"],\r\n    title: \"안개가 짙어요.\",\r\n    subtitle: \"운전이나 야외 활동 할 때 조심하세요~\",\r\n  },\r\n  Mist: {\r\n    iconName: \"weather-fog\",\r\n    color: [\"#606c88\", \"#3f4c6b\"],\r\n    title: \"안개가 짙어요.\",\r\n    subtitle: \"운전이나 야외 활동 할 때 조심하세요~\",\r\n  },\r\n  Smoke: {\r\n    iconName: \"weather-fog\",\r\n    color: [\"#606c88\", \"#3f4c6b\"],\r\n    title: \"안개가 짙어요.\",\r\n    subtitle: \"운전이나 야외 활동 할 때 조심하세요~\",\r\n  },\r\n  Fog: {\r\n    iconName: \"weather-fog\",\r\n    color: [\"#606c88\", \"#3f4c6b\"],\r\n    title: \"안개가 짙어요.\",\r\n    subtitle: \"운전이나 야외 활동 할 때 조심하세요~\",\r\n  },\r\n  Ash: {\r\n    iconName: \"weather-fog\",\r\n    color: [\"#606c88\", \"#3f4c6b\"],\r\n    title: \"안개가 짙어요.\",\r\n    subtitle: \"운전이나 야외 활동 할 때 조심하세요~\",\r\n  },\r\n  Dust: {\r\n    iconName: \"weather-fog\",\r\n    color: [\"#544a7d\", \"#ffd452\"],\r\n    title: \"먼지가 많아요.\",\r\n    subtitle: \"야외 활동을 삼가해주세요. 마스크는 필수!!\",\r\n  },\r\n  Thunderstorm: {\r\n    iconName: \"weather-lightning\",\r\n    color: [\"#232526\", \"#414345\"],\r\n    title: \"폭풍우 에요!!\",\r\n    subtitle: \"오늘은 집돌이 집순이가 됩시다 ㅎㅎ\",\r\n  },\r\n  Drizzle: {\r\n    iconName: \"weather-rainy\",\r\n    color: [\"#4c669f\", \"#3b5998\", \"#192f6a\"],\r\n    title: \"비가 조금씩 떨어져요.\",\r\n    subtitle:\r\n      \"'가랑비에 옷 젖는 줄 모른다' 라는 속담이 있죠. 우산 가져가세요~~\",\r\n  },\r\n  Rain: {\r\n    iconName: \"weather-pouring\",\r\n    color: [\"#0f0c29\", \"#302b63\", \"#24243e\"],\r\n    title: \"비가 많이 와요!!\",\r\n    subtitle: \"우산 꼭 꼭 챙기세요!!\",\r\n  },\r\n  Snow: {\r\n    iconName: \"weather-snowy\",\r\n    color: [\"#757f9a\", \"#d7dde8\"],\r\n    title: \"눈이 내려요.\",\r\n    subtitle: \"야외 활동시 미끄러지지 않게 조심하세요!\",\r\n  },\r\n  Clear: {\r\n    iconName: \"weather-sunny\",\r\n    color: [\"#2193b0\", \"#6dd5ed\"],\r\n    title: \"날씨가 맑아요.\",\r\n    subtitle: \"오늘 야외 활동을 해보는게 어때요??\",\r\n  },\r\n  Clouds: {\r\n    iconName: \"weather-cloudy\",\r\n    color: [\"#403b4a\", \"#e7e9bb\"],\r\n    title: \"구름이 많아요.\",\r\n    subtitle: \"날씨가 꿀꿀 하지만 신나는 음악으로 기분 전환 해봐요~\",\r\n  },\r\n};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}